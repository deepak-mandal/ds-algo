Spring boot project

file => new => spring statter project
name: SampleDemo
=> next=> next=> finish

* while creating project search and add these 3 dependency before finish
1. MySQL driver
2. spring data jpa
3. spring web





WebService:- It is an application for communication between 2 devices or applications


types of webservices:-
1. SOAP: simple object access protocol
2. REST: Representational State Transfer


REST
----
It is an lightweight, maintainable and scalable
-> Any service build using Rest Architecture is called as RESTful service

protocol used is HTTP protocol

multiple format of data is supported in RESTful webservice - plain-text, xml, JSON, HTML







RequestHeader
--------------
Additional instructore sent with the request() this might define the type of resource required



RequestBody
-----------
Data is sent with request



ResponseBody
------------
this is the main part of the response
it also response status
200-> ok
201-> created
404-> resource not found
500-> server error



Methods
-------
POST -> @POSTMapping
GET -> @GETMapping
PUT -> @PUTMapping
DELETE -> @DELETEMapping


database used for testing the project initially . -> in-memory database (H2)




model -> defines the data model required to perform crud operation
repository-> is responsible to carry out crud operation in database
service -> is the layer responsible to render the service
controller-> this class is responsible to the end-user to specify the end-point exposed









Overview
--------

right click on package
1. com.cgi.model
2. com.cgi.repository
3. com.cgi.service
4. com.cgi.controller


in model => create class -> Department.java
in repository => create interface -> DepartmentRepository with add CRUD repository
in service => new interface DepartmentService & DepartmentServiceImpl.java(class) with dependency imported; source=> override & implement the methods
in controller=> new class DepartmentCOntroller->@Autowired {service we are calling class from another class}-> only in constructor








JUnit
right click on class-> new junit testcase
annoated with @springBootTest
when one class is implemented in another class then we need to annoation @autowir
eg. 
@Autowired 
private DepartmentReporesotory deptRepo

run with junit testcase
(we are calling the separtment service so @mock is used)













